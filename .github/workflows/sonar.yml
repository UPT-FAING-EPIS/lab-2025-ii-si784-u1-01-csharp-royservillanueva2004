name: CI - Build, Test, Sonar & Publish NuGet

env:
  DOTNET_VERSION: '8.x'
  SONAR_ORG: 'royservillanueva2004'
  SONAR_PROJECT: 'royservillanueva2004_apibank'
  PACKAGE_VERSION: '1.0.0'
  NUGET_SOURCE_NAME: 'github'
  NUGET_SOURCE_URL: 'https://nuget.pkg.github.com/UPT-FAING-EPIS/index.json'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test-sonar-pack-publish:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore (NuGet)
        run: dotnet restore

      - name: Show NuGet sources
        run: dotnet nuget list source

      - name: Install SonarScanner
        run: dotnet tool install -g dotnet-sonarscanner

      - name: Build, Test & Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT }}" /o:"${{ env.SONAR_ORG }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" /d:sonar.qualitygate.wait=true
          dotnet build --no-incremental
          dotnet test --collect:"XPlat Code Coverage;Format=opencover"
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Pack NuGet
        run: dotnet pack Bank/Bank.Domain/Bank.Domain.csproj -c Release -o out /p:Version=${{ env.PACKAGE_VERSION }}

      - name: Add GitHub Packages source
        run: dotnet nuget add source ${{ env.NUGET_SOURCE_URL }} --name ${{ env.NUGET_SOURCE_NAME }} --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

      - name: Push package to GitHub Packages
        run: dotnet nuget push out/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source ${{ env.NUGET_SOURCE_NAME }} --skip-duplicate
